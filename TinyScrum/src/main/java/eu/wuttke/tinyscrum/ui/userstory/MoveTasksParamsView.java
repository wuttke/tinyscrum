package eu.wuttke.tinyscrum.ui.userstory;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.Property.ValueChangeEvent;
import com.vaadin.data.Property.ValueChangeListener;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickListener;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.OptionGroup;
import com.vaadin.ui.Panel;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;

import eu.wuttke.tinyscrum.domain.UserStory;
import eu.wuttke.tinyscrum.ui.TinyScrumApplication;

public class MoveTasksParamsView extends CustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private VerticalLayout mainLayout;
	@AutoGenerated
	private HorizontalLayout horizontalLayout_1;
	@AutoGenerated
	private Button btnCancel;
	@AutoGenerated
	private Button btnOk;
	@AutoGenerated
	private Panel storyPanel;
	@AutoGenerated
	private FilterableStoryTableView filterableStoryTableView;
	@AutoGenerated
	private TextField textFieldNewStoryName;
	@AutoGenerated
	private OptionGroup optionGroup;
	private static String CREATE_NEW_STORY = "Create new backlog user story";
	private static String USE_EXISTING_STORY = "Use existing user story";
	
	public MoveTasksParamsView() {
		buildMainLayout();
		setCompositionRoot(mainLayout);
		 
		storyPanel.setEnabled(false);
		
		optionGroup.addItem(CREATE_NEW_STORY);
		optionGroup.addItem(USE_EXISTING_STORY);
		optionGroup.setValue(CREATE_NEW_STORY);
		optionGroup.setImmediate(true);

		optionGroup.addListener(new ValueChangeListener() {
			@Override
			public void valueChange(ValueChangeEvent event) {
				textFieldNewStoryName.setEnabled(isCreateNewUserStory());
				storyPanel.setEnabled(!textFieldNewStoryName.isEnabled());
			}
			private static final long serialVersionUID = 1L;
		});
	}
	
	public void setApplication(TinyScrumApplication application) {
		filterableStoryTableView.setApplication(application);
	}
	
	public void addOkListener(ClickListener l) {
		btnOk.addListener(l);
	}
	
	public void addCancelListener(ClickListener l) {
		btnCancel.addListener(l);
	}

	public boolean isCreateNewUserStory() {
		return optionGroup.getValue() == CREATE_NEW_STORY;
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(true);
		mainLayout.setSpacing(true);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// optionGroup
		optionGroup = new OptionGroup();
		optionGroup.setCaption("Action");
		optionGroup.setImmediate(false);
		optionGroup.setWidth("100.0%");
		optionGroup.setHeight("-1px");
		optionGroup.setRequired(true);
		mainLayout.addComponent(optionGroup);
		
		// textFieldNewStoryName
		textFieldNewStoryName = new TextField();
		textFieldNewStoryName.setCaption("New User Story Name");
		textFieldNewStoryName.setImmediate(false);
		textFieldNewStoryName.setWidth("100.0%");
		textFieldNewStoryName.setHeight("-1px");
		mainLayout.addComponent(textFieldNewStoryName);
		
		// storyPanel
		storyPanel = buildStoryPanel();
		mainLayout.addComponent(storyPanel);
		mainLayout.setExpandRatio(storyPanel, 1.0f);
		
		// horizontalLayout_1
		horizontalLayout_1 = buildHorizontalLayout_1();
		mainLayout.addComponent(horizontalLayout_1);
		mainLayout.setComponentAlignment(horizontalLayout_1, new Alignment(6));
		
		return mainLayout;
	}

	@AutoGenerated
	private Panel buildStoryPanel() {
		// common part: create layout
		storyPanel = new Panel();
		storyPanel.setCaption("Existing User Stories");
		storyPanel.setImmediate(false);
		storyPanel.setWidth("100.0%");
		storyPanel.setHeight("100.0%");
		
		// verticalLayout_1
		filterableStoryTableView = new FilterableStoryTableView();
		filterableStoryTableView.setWidth("100.0%");
		filterableStoryTableView.setHeight("100.0%");
		storyPanel.setContent(filterableStoryTableView);
		
		return storyPanel;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_1() {
		// common part: create layout
		horizontalLayout_1 = new HorizontalLayout();
		horizontalLayout_1.setImmediate(false);
		horizontalLayout_1.setWidth("-1px");
		horizontalLayout_1.setHeight("26px");
		horizontalLayout_1.setMargin(false);
		horizontalLayout_1.setSpacing(true);
		
		// btnOk
		btnOk = new Button();
		btnOk.setCaption("OK");
		btnOk.setImmediate(false);
		btnOk.setWidth("80px");
		btnOk.setHeight("-1px");
		horizontalLayout_1.addComponent(btnOk);
		
		// btnCancel
		btnCancel = new Button();
		btnCancel.setCaption("Cancel");
		btnCancel.setImmediate(false);
		btnCancel.setWidth("80px");
		btnCancel.setHeight("-1px");
		horizontalLayout_1.addComponent(btnCancel);
		horizontalLayout_1.setComponentAlignment(btnCancel, new Alignment(6));
		
		return horizontalLayout_1;
	}
	
	private static final long serialVersionUID = 1L;

	public UserStory getSelectedStory() {
		return filterableStoryTableView.getSelectedStory();
	}

	public String getNewStoryTitle() {
		return (String)textFieldNewStoryName.getValue();
	}

	public void refreshContent() {
		filterableStoryTableView.refreshContent();
	}

}
